# PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres:5432/mydb
spring.datasource.username=myuser
spring.datasource.password=mypassword
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Consumer (fix to handle Passenger objects)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Tell Spring which class to map JSON to
spring.kafka.consumer.properties.spring.json.value.default.type=com.sidd.flight.flightcheckin.entity.Passenger
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ======================
# Logging
# ======================
logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=INFO

# ======================
# Mail Configuration
# ======================

spring.mail.host=smtp.office365.com
spring.mail.port=587
spring.mail.username=asthana.siddhartha@outlook.com
spring.mail.password=tdkkgcbbbhctbvdk
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# ===============================
# Server Configuration
# ===============================
server.port=8080

# ======================
# Spring Boot Configuration
# ======================
logging.level.org.springframework.boot.context.config=DEBUG

# ======================
# Security Configuration
# ======================
spring.security.user.name=admin
spring.security.user.password=admin

# Let Hibernate create tables automatically
spring.jpa.hibernate.ddl-auto=update

# Ensure data.sql runs AFTER schema creation
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
